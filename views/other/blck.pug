mixin field(name, content)
    field(name=name)= content

mixin number_shadow(number = 1)
    shadow(type="math_number")
        +field("NUM", number)

body
    div#workspace
    div#blocklyDiv

    xml#toolbox(xmlns="https://developers.google.com/blockly/xml")
        category(name="Control flow")
            block(type="controls_for")
                value(name="FROM")
                    block(type="math_number")
                        +field("NUM", 1)
                value(name="TO")
                    block(type="math_number")
                        +field("NUM", 10)
                value(name="BY")
                    block(type="math_number")
                        +field("NUM", 1)

        category(name="Logics", colour="%{BKY_LOGIC_HUE}")
            block(type="logic_boolean")

        category(name="Math", colour="%{BKY_MATH_HUE}")
            block(type="math_number")
                field(name="NUM")= 1
            block(type="math_arithmetic")
                value(name="A")
                    +number_shadow
                value(name="B")
                    +number_shadow

        sep

        category(name="Variables", custom="VARIABLE")

        category(name="Macros", custom="PROCEDURE")

style.
    #toolbox {
        display: none;
    }

script(src="https://unpkg.com/blockly/blockly.min.js")

// Blockly setup
script.
    const blocklyArea = document.getElementById('blocklyArea');
    const blocklyDiv = document.getElementById('blocklyDiv');
    const workspace = Blockly.inject(
        blocklyDiv,
        {
            toolbox: document.getElementById('toolbox'),
            grid: {
                spacing: 20,
                length: 3,
                colour: "#ccc",
                snap: true,
                trashcan: true,
            },
            move: {
                scrollbars: {
                    horizontal: true,
                    vertical: true,
                },
                drag: true,
                wheel: true,
            }
        }
    );

    const workspace_div = document.getElementById("workspace");
    Blockly.Xml.domToWorkspace(workspace, workspace_div);

    /*
    var onresize = function(e) {
        // Compute the absolute coordinates and dimensions of blocklyArea.
        var element = blocklyArea;
        var x = 0;
        var y = 0;
        do {
            x += element.offsetLeft;
            y += element.offsetTop;
            element = element.offsetParent;
        } while (element);
        // Position blocklyDiv over blocklyArea.
        blocklyDiv.style.left = x + 'px';
        blocklyDiv.style.top = y + 'px';
        blocklyDiv.style.width = blocklyArea.offsetWidth + 'px';
        blocklyDiv.style.height = blocklyArea.offsetHeight + 'px';
        Blockly.svgResize(workspace);
    };
    window.addEventListener('resize', onresize, false);
    onresize();
    Blockly.svgResize(workspace);
    */

// Blocks to SPWN generator
script.
    const SPWNGenerator = new Blockly.Generator('SPWN');
    
    SPWNGenerator['block'] = (block) => {
        return "h"
    }

    SPWNGenerator.workspaceToCode(workspace)
